name: Publish Python Package

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+a[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+b[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+rc[0-9]+"
  workflow_dispatch:

jobs:
  publish:
    name: Build & Publish to PyPi
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Get Version
        id: get_version
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Validate Package Version
        run: |
          PACKAGE_VERSION=$(grep '^version = ' pyproject.toml | cut -d'"' -f2)
          if [ "${{ steps.get_version.outputs.version }}" != "$PACKAGE_VERSION" ]; then
            echo "Package version ($PACKAGE_VERSION) does not match tag version (${{ steps.get_version.outputs.version }})"
            exit 1
          fi

      - name: Install dependencies
        run: uv sync --dev --group types

      - name: Run tests
        env:
          LEMONSQUEEZY_API_KEY: ${{ secrets.LEMONSQUEEZY_API_KEY }}
        run: uv run pytest

      - name: Build package
        run: uv build

      - name: Verify build artifacts
        run: |
          ls -la dist/
          if [ ! -f "dist/lemonsqueezy-${{ steps.get_version.outputs.version }}.tar.gz" ]; then
            echo "Source distribution not found"
            exit 1
          fi
          if [ ! -f "dist/lemonsqueezy-${{ steps.get_version.outputs.version }}-py3-none-any.whl" ]; then
            echo "Wheel distribution not found"
            exit 1
          fi

      - name: Publish package
        run: uv publish --token ${{ secrets.PYPI_TOKEN }}
